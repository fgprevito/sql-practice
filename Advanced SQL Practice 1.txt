-- Total value = qty * price
-- Yield = dividend / price 
-- Total dividend payment = dividend * qty

-- a X

select shrcode, shrfirm, (shrdiv / shrprice) as 'Yield'
from shares
where (shrdiv / shrprice) = 
(select min(shrdiv / shrprice)
from shares);

-- b O

select shrcode, shrfirm, (shrdiv * shrqty) as 'Total Div Payment'
from shares
where (shrdiv * shrqty) =
(select max(shrdiv * shrqty)
from shares);

-- c X

select shrcode, shrfirm, (shrdiv / shrprice) as 'Avg Yield'
from shares
where (shrdiv / shrprice) <
(select avg(shrdiv / shrprice)
from shares)
order by shrfirm;

-- a

select donor.donorno, dfname, dlname, amount
from donor join gift
on donor.donorno = gift.donorno
and year = 2012
and amount =
(select max(amount)
from gift
where year = 2012);

-- b

select d.donorno, dlname, dfname, sum(amount) as 'Total Amount Donated'
from donor d left outer join gift g
on d.donorno = g.donorno
group by d.donorno, dlname, dfname
order by dlname, dfname;

-- c 

select dstate, sum(amount) as 'Total Donations'
from donor d join gift g
on d.donorno = g.donorno
and year = 2014
group by dstate;

-- d remember to dilneate record criteria by the parent table it is from 

select y.year, yeargoal, sum(amount) as 'Total Amount Donated'
from year y join gift g
on y.year = g.year
group by y.year, yeargoal
having sum(amount) > yeargoal;

-- e

select d.donorno, dfname, dlname, avg(amount)
from donor d join gift g
on d.donorno = g.donorno
group by d.donorno, dfname, dlname
having avg(amount) >= 
(select 2 * avg(amount)
from gift);

-- f

select d.donorno, dfname, dlname, count(year) as '# of Donations'
from donor d join gift g
on d.donorno = g.donorno
group by d.donorno, dfname, dlname
having count(year) = 
(select count(*) 
from year);

-- a

select i.iname, icolor, dname
from item i join sale s
on i.iname = s.iname
and icolor = 'brown'
and dname = 'Recreation';

-- b BE COMFY WITH THIS

select *
from item
where iname not in
(select distinct iname
from delivery
where dname = 'Books'); 

-- c

select * 
from dept
where dname not in
(select distinct dname
from sale
where iname = 'Geo positioning system');

-- d 

select distinct iname 
from delivery
where iname not in
(select distinct iname
from sale);

-- e

select ename, esalary
from employee
where esalary =
(select max(esalary)
from employee);

-- f

select ename, esalary
from employee
where esalary <
(select avg(esalary)
from employee);

-- g

select i.iname, icolor, itype, sum(saleqty) as 'Total Sold'
from item i left outer join sale s
on i.iname = s.iname
group by i.iname, icolor, itype;

-- h X

select supplier#, count(sale#) 
from sale s 
join item i on s.iname = i.iname
join delivery d on i.iname = d.iname
and supplier# = 101;

-- i
-- if we are aggregating and we are joining, the potential for a problem exists
-- next question is where is aggregation is occurring
-- If it is on the one side, than there might be an issue
-- might be able to solve this with a distinct depending on question being asked

select avg(esalary) as 'Avg Salary'
from employee
where dname in 
(select distinct dname
from sale s join item i 
on s.iname = i.iname
and (icolor is null
or icolor is ''));

select avg(esalary) as 'Avg Salary'
from employee 
where dname in
(select distinct dname
from sale s join item i
on s.iname = i.iname
and (icolor is null
or icolor = ''));

-- j

select ename, dname, esalary
from employee e
where esalary >
(select avg(esalary)
from employee
where dname = e.dname);

-- a 
-- the foreign key = the primary key

select e.empfname, b.empfname, e.deptname, b.deptname
from emp e join emp b
on e.boss = b.empno
and e.deptname = b.deptname;

-- b 

select deptname, avg(empsalary) as 'Avg Salary'
from emp
where empno not in
(select distinct boss from emp)
group by deptname
having avg(empsalary) > 25000;

-- c

select distinct deptname
from emp
where deptname not in
(select distinct e.deptname
from emp e join emp b
on e.boss = b.empno
and e.empsalary > b.empsalary);

-- d

select e.empfname, b.empfname, e.deptname, e.empsalary
from emp e join emp b
on e.boss = b.empno
and e.deptname = 'Marketing'
and e.empsalary > 25000;

-- e

select empfname, empsalary
from emp 
where empsalary >
(select max(empsalary)
from emp
where deptname = 'Marketing');

--------------------------

select sum(quantity)
from order_details od
join products p on od.productid = p.productid
join suppliers s on p.supplierid = s.supplierid
and state = 'WA';

select region, count(distinct c.customerid)
from customers c 
join orders o on c.customerid = o.customerid
join order_details od on o.orderid = od.orderid
join products p on od.productid = p.productid
and latinname like 'L%'
group by region;

select postalcode, count(distinct e.employeeid) as '# of employees'
from employees e join orders o
on e.employeeid = o.employeeid
join order_details od
on o.orderid = od.orderid
join products p
on od.productid = p.productid
and (latinname is null
or latinname = '')
group by postalcode;

select p.productid, productname, sum((od.unitprice * quantity)*(1-discount)) as 'Total Revenue'
from product p join order_details od
on p.productid = od.productid
join orders o
on od.orderid = o.orderid
join customers c
on o.customerid = c.customerid
and region = 'CA' 
group by p.productid, productname
order by 3 desc
limit 1;